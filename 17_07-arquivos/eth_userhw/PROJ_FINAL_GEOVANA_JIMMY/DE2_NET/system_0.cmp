	component system_0 is
		port (
			clk_50                            : in    std_logic                     := 'X';             -- clk
			zs_addr_from_the_sdram_0          : out   std_logic_vector(11 downto 0);                    -- addr
			zs_ba_from_the_sdram_0            : out   std_logic_vector(1 downto 0);                     -- ba
			zs_cas_n_from_the_sdram_0         : out   std_logic;                                        -- cas_n
			zs_cke_from_the_sdram_0           : out   std_logic;                                        -- cke
			zs_cs_n_from_the_sdram_0          : out   std_logic;                                        -- cs_n
			zs_dq_to_and_from_the_sdram_0     : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			zs_dqm_from_the_sdram_0           : out   std_logic_vector(1 downto 0);                     -- dqm
			zs_ras_n_from_the_sdram_0         : out   std_logic;                                        -- ras_n
			zs_we_n_from_the_sdram_0          : out   std_logic;                                        -- we_n
			tri_state_bridge_0_data           : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- tri_state_bridge_0_data
			tri_state_bridge_0_readn          : out   std_logic_vector(0 downto 0);                     -- tri_state_bridge_0_readn
			write_n_to_the_cfi_flash_0        : out   std_logic_vector(0 downto 0);                     -- write_n_to_the_cfi_flash_0
			tri_state_bridge_0_address        : out   std_logic_vector(21 downto 0);                    -- tri_state_bridge_0_address
			select_n_to_the_cfi_flash_0       : out   std_logic_vector(0 downto 0);                     -- select_n_to_the_cfi_flash_0
			reset_n                           : in    std_logic                     := 'X';             -- reset_n
			in_port_to_the_button_pio         : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			in_port_to_the_switch_pio         : in    std_logic_vector(17 downto 0) := (others => 'X'); -- export
			dm9000a_iOSC_50                   : in    std_logic                     := 'X';             -- iOSC_50
			dm9000a_ENET_DATA                 : inout std_logic_vector(15 downto 0) := (others => 'X'); -- ENET_DATA
			dm9000a_ENET_CMD                  : out   std_logic;                                        -- ENET_CMD
			dm9000a_ENET_RD_N                 : out   std_logic;                                        -- ENET_RD_N
			dm9000a_ENET_WR_N                 : out   std_logic;                                        -- ENET_WR_N
			dm9000a_ENET_CS_N                 : out   std_logic;                                        -- ENET_CS_N
			dm9000a_ENET_RST_N                : out   std_logic;                                        -- ENET_RST_N
			dm9000a_ENET_CLK                  : out   std_logic;                                        -- ENET_CLK
			dm9000a_ENET_INT                  : in    std_logic                     := 'X';             -- ENET_INT
			sram_0_avalon_slave_0_export_DQ   : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_0_avalon_slave_0_export_ADDR : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram_0_avalon_slave_0_export_UB_N : out   std_logic;                                        -- UB_N
			sram_0_avalon_slave_0_export_LB_N : out   std_logic;                                        -- LB_N
			sram_0_avalon_slave_0_export_WE_N : out   std_logic;                                        -- WE_N
			sram_0_avalon_slave_0_export_CE_N : out   std_logic;                                        -- CE_N
			sram_0_avalon_slave_0_export_OE_N : out   std_logic                                         -- OE_N
		);
	end component system_0;

